from typing import Any, Dict, Optional, Union
from uuid import UUID

import chainlit as cl
from chainlit.message import Message
from chainlit.playground.providers.openai import stringify_function_call
from langchain.callbacks.tracers.base import BaseTracer
from langchain.schema.output import ChatGenerationChunk, GenerationChunk


class CustomAsyncLangchainCallbackHandler(cl.AsyncLangchainCallbackHandler):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.image_reached = False

    def _get_completion(self, generation: Dict):
        if message := generation.get("message"):
            kwargs = message.get("kwargs", {})
            if function_call := kwargs.get("additional_kwargs", {}).get(
                "function_call"
            ):
                return stringify_function_call(function_call), "json"
            else:
                return kwargs.get("content", "").split("Final Answer:")[-1], None
        else:
            return generation.get("text", ""), None

    def on_llm_new_token(
        self,
        token: str,
        *,
        chunk: Optional[Union[GenerationChunk, ChatGenerationChunk]] = None,
        run_id: UUID,
        parent_run_id: Optional[UUID] = None,
        **kwargs: Any,
    ) -> Any:
        msg = self.llm_stream_message.get(str(run_id), None)
        if msg:
            self._run_sync(msg.stream_token(token))

        if self.stream_final_answer:
            self._append_to_last_tokens(token)

            if self.answer_reached:
                if not self.final_stream:
                    self.final_stream = Message(
                        content="",
                    )
                self._run_sync(self.final_stream.stream_token(token))
                self.has_streamed_final_answer = True
            else:
                self.answer_reached = self._check_if_answer_reached()

        BaseTracer.on_llm_new_token(
            self,
            token,
            chunk=chunk,
            run_id=run_id,
            parent_run_id=parent_run_id,
            **kwargs,
        )
